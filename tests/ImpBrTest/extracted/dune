(library
  (name extracted)
  (wrapped false)
  )
(coq.extraction
  (prelude Extract)
  (theories CTree CTreeImp ImpBrEx)
  (extracted_modules
    Applicative
    Ascii
    Basics0
    Basics
    BinNat
    BinNums
    BinPosDef
    BinPos
    Bool
    Byte
    CategoryOps
    Char0
    Consider
    CTreeDefinitions
    Datatypes
    DecidableClass
    Decimal
    EitherMonad
    Extras
    ExtrOcamlIntConv
    Fin
    Fold
    FoldStateT
    FMapAList
    Function
    Functor
    Hexadecimal
    ImpBr
    ImpBrEx
    Index
    Interp
    ITreeDefinition
    List0
    Logic
    MapDefault
    Maps
    MonadExc
    MonadFix
    Monad
    MonadPlus
    MonadReader
    MonadState
    MonadTrans
    MonadWriter
    MonadZero
    Monoid
    Nat
    Number
    OptionMonad
    PeanoNat
    ReaderMonad
    Reducible
    RelDec
    Specif
    State
    StateMonad
    String0
    String1
    Subevent
    Sum
    Utils
    Wf0
    Wf
))
